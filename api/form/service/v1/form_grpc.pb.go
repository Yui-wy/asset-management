// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// FormClient is the client API for Form service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type FormClient interface {
	// 申请表
	// 得到入库申请表
	GetStorageForm(ctx context.Context, in *GetStorageFormReq, opts ...grpc.CallOption) (*GetStorageFormReply, error)
	// 列出申请表(条件)
	ListStorageForm(ctx context.Context, in *ListStorageFormReq, opts ...grpc.CallOption) (*ListStorageFormReply, error)
	// 创建申请表()
	CreateStorageForm(ctx context.Context, in *CreateStorageFormReq, opts ...grpc.CallOption) (*CreateStorageFormReply, error)
	// 更新申请表
	UpdateStorageForm(ctx context.Context, in *UpdateStorageFormReq, opts ...grpc.CallOption) (*UpdateStorageFormReply, error)
	// 报废表
	// 得到报废表
	GetScrappedForm(ctx context.Context, in *GetScrappedFormReq, opts ...grpc.CallOption) (*GetScrappedFormReply, error)
	// 列出报废表(条件)
	ListScrappedForm(ctx context.Context, in *ListScrappedFormReq, opts ...grpc.CallOption) (*ListScrappedFormReply, error)
	// 创建报废表()
	CreateScrappedForm(ctx context.Context, in *CreateScrappedFormReq, opts ...grpc.CallOption) (*CreateScrappedFormReply, error)
	// 更新报废表
	UpdateScrappedForm(ctx context.Context, in *UpdateScrappedFormReq, opts ...grpc.CallOption) (*UpdateScrappedFormReply, error)
}

type formClient struct {
	cc grpc.ClientConnInterface
}

func NewFormClient(cc grpc.ClientConnInterface) FormClient {
	return &formClient{cc}
}

func (c *formClient) GetStorageForm(ctx context.Context, in *GetStorageFormReq, opts ...grpc.CallOption) (*GetStorageFormReply, error) {
	out := new(GetStorageFormReply)
	err := c.cc.Invoke(ctx, "/form.service.v1.Form/GetStorageForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *formClient) ListStorageForm(ctx context.Context, in *ListStorageFormReq, opts ...grpc.CallOption) (*ListStorageFormReply, error) {
	out := new(ListStorageFormReply)
	err := c.cc.Invoke(ctx, "/form.service.v1.Form/ListStorageForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *formClient) CreateStorageForm(ctx context.Context, in *CreateStorageFormReq, opts ...grpc.CallOption) (*CreateStorageFormReply, error) {
	out := new(CreateStorageFormReply)
	err := c.cc.Invoke(ctx, "/form.service.v1.Form/CreateStorageForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *formClient) UpdateStorageForm(ctx context.Context, in *UpdateStorageFormReq, opts ...grpc.CallOption) (*UpdateStorageFormReply, error) {
	out := new(UpdateStorageFormReply)
	err := c.cc.Invoke(ctx, "/form.service.v1.Form/UpdateStorageForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *formClient) GetScrappedForm(ctx context.Context, in *GetScrappedFormReq, opts ...grpc.CallOption) (*GetScrappedFormReply, error) {
	out := new(GetScrappedFormReply)
	err := c.cc.Invoke(ctx, "/form.service.v1.Form/GetScrappedForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *formClient) ListScrappedForm(ctx context.Context, in *ListScrappedFormReq, opts ...grpc.CallOption) (*ListScrappedFormReply, error) {
	out := new(ListScrappedFormReply)
	err := c.cc.Invoke(ctx, "/form.service.v1.Form/ListScrappedForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *formClient) CreateScrappedForm(ctx context.Context, in *CreateScrappedFormReq, opts ...grpc.CallOption) (*CreateScrappedFormReply, error) {
	out := new(CreateScrappedFormReply)
	err := c.cc.Invoke(ctx, "/form.service.v1.Form/CreateScrappedForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *formClient) UpdateScrappedForm(ctx context.Context, in *UpdateScrappedFormReq, opts ...grpc.CallOption) (*UpdateScrappedFormReply, error) {
	out := new(UpdateScrappedFormReply)
	err := c.cc.Invoke(ctx, "/form.service.v1.Form/UpdateScrappedForm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FormServer is the server API for Form service.
// All implementations must embed UnimplementedFormServer
// for forward compatibility
type FormServer interface {
	// 申请表
	// 得到入库申请表
	GetStorageForm(context.Context, *GetStorageFormReq) (*GetStorageFormReply, error)
	// 列出申请表(条件)
	ListStorageForm(context.Context, *ListStorageFormReq) (*ListStorageFormReply, error)
	// 创建申请表()
	CreateStorageForm(context.Context, *CreateStorageFormReq) (*CreateStorageFormReply, error)
	// 更新申请表
	UpdateStorageForm(context.Context, *UpdateStorageFormReq) (*UpdateStorageFormReply, error)
	// 报废表
	// 得到报废表
	GetScrappedForm(context.Context, *GetScrappedFormReq) (*GetScrappedFormReply, error)
	// 列出报废表(条件)
	ListScrappedForm(context.Context, *ListScrappedFormReq) (*ListScrappedFormReply, error)
	// 创建报废表()
	CreateScrappedForm(context.Context, *CreateScrappedFormReq) (*CreateScrappedFormReply, error)
	// 更新报废表
	UpdateScrappedForm(context.Context, *UpdateScrappedFormReq) (*UpdateScrappedFormReply, error)
	mustEmbedUnimplementedFormServer()
}

// UnimplementedFormServer must be embedded to have forward compatible implementations.
type UnimplementedFormServer struct {
}

func (UnimplementedFormServer) GetStorageForm(context.Context, *GetStorageFormReq) (*GetStorageFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStorageForm not implemented")
}
func (UnimplementedFormServer) ListStorageForm(context.Context, *ListStorageFormReq) (*ListStorageFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListStorageForm not implemented")
}
func (UnimplementedFormServer) CreateStorageForm(context.Context, *CreateStorageFormReq) (*CreateStorageFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStorageForm not implemented")
}
func (UnimplementedFormServer) UpdateStorageForm(context.Context, *UpdateStorageFormReq) (*UpdateStorageFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStorageForm not implemented")
}
func (UnimplementedFormServer) GetScrappedForm(context.Context, *GetScrappedFormReq) (*GetScrappedFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetScrappedForm not implemented")
}
func (UnimplementedFormServer) ListScrappedForm(context.Context, *ListScrappedFormReq) (*ListScrappedFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListScrappedForm not implemented")
}
func (UnimplementedFormServer) CreateScrappedForm(context.Context, *CreateScrappedFormReq) (*CreateScrappedFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateScrappedForm not implemented")
}
func (UnimplementedFormServer) UpdateScrappedForm(context.Context, *UpdateScrappedFormReq) (*UpdateScrappedFormReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateScrappedForm not implemented")
}
func (UnimplementedFormServer) mustEmbedUnimplementedFormServer() {}

// UnsafeFormServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to FormServer will
// result in compilation errors.
type UnsafeFormServer interface {
	mustEmbedUnimplementedFormServer()
}

func RegisterFormServer(s grpc.ServiceRegistrar, srv FormServer) {
	s.RegisterService(&Form_ServiceDesc, srv)
}

func _Form_GetStorageForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStorageFormReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormServer).GetStorageForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/form.service.v1.Form/GetStorageForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormServer).GetStorageForm(ctx, req.(*GetStorageFormReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Form_ListStorageForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStorageFormReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormServer).ListStorageForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/form.service.v1.Form/ListStorageForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormServer).ListStorageForm(ctx, req.(*ListStorageFormReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Form_CreateStorageForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStorageFormReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormServer).CreateStorageForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/form.service.v1.Form/CreateStorageForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormServer).CreateStorageForm(ctx, req.(*CreateStorageFormReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Form_UpdateStorageForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStorageFormReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormServer).UpdateStorageForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/form.service.v1.Form/UpdateStorageForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormServer).UpdateStorageForm(ctx, req.(*UpdateStorageFormReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Form_GetScrappedForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetScrappedFormReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormServer).GetScrappedForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/form.service.v1.Form/GetScrappedForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormServer).GetScrappedForm(ctx, req.(*GetScrappedFormReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Form_ListScrappedForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListScrappedFormReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormServer).ListScrappedForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/form.service.v1.Form/ListScrappedForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormServer).ListScrappedForm(ctx, req.(*ListScrappedFormReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Form_CreateScrappedForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateScrappedFormReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormServer).CreateScrappedForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/form.service.v1.Form/CreateScrappedForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormServer).CreateScrappedForm(ctx, req.(*CreateScrappedFormReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Form_UpdateScrappedForm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateScrappedFormReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FormServer).UpdateScrappedForm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/form.service.v1.Form/UpdateScrappedForm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FormServer).UpdateScrappedForm(ctx, req.(*UpdateScrappedFormReq))
	}
	return interceptor(ctx, in, info, handler)
}

// Form_ServiceDesc is the grpc.ServiceDesc for Form service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Form_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "form.service.v1.Form",
	HandlerType: (*FormServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStorageForm",
			Handler:    _Form_GetStorageForm_Handler,
		},
		{
			MethodName: "ListStorageForm",
			Handler:    _Form_ListStorageForm_Handler,
		},
		{
			MethodName: "CreateStorageForm",
			Handler:    _Form_CreateStorageForm_Handler,
		},
		{
			MethodName: "UpdateStorageForm",
			Handler:    _Form_UpdateStorageForm_Handler,
		},
		{
			MethodName: "GetScrappedForm",
			Handler:    _Form_GetScrappedForm_Handler,
		},
		{
			MethodName: "ListScrappedForm",
			Handler:    _Form_ListScrappedForm_Handler,
		},
		{
			MethodName: "CreateScrappedForm",
			Handler:    _Form_CreateScrappedForm_Handler,
		},
		{
			MethodName: "UpdateScrappedForm",
			Handler:    _Form_UpdateScrappedForm_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/form/service/v1/form.proto",
}
