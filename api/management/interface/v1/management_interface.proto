syntax = "proto3";

package management.interface.v1;

import "google/api/annotations.proto";

option go_package          = "api/management/interface/v1;v1";
option java_multiple_files = true;

// 接口
service ManagementInterface {
    // 用户系统 =================================
    // 用户登陆
    rpc Login(LoginReq) returns (LoginReply) {
        option (google.api.http) = {
            post: "/v1/user/login"
            body: "*"
        };
    }
    // 得到RSA密钥
    rpc GetKey(GetKeyReq) returns (GetKeyReply) {
        option (google.api.http) = {
            get: "/v1/user/key"
        };
    }
    // 用户登出
    rpc Logout(LogoutReq) returns (LogoutReply) {
        option (google.api.http) = {
            post: "/v1/user/logout"
            body: "*"
        };
    }

    // 用户注册 admin
    rpc Register(RegisterReq) returns (RegisterReply) {
        option (google.api.http) = {
            post: "/v1/user/register"
            body: "*"
        };
    }
    // 得到用户 admin
    rpc GetUser(GetUserReq) returns (GetUserReply) {
        option (google.api.http) = {
            get: "/v1/user/{id}"
        };
    }
    // 得到自己的用户信息
    rpc GetSelf(GetSelfReq) returns (GetSelfReply) {
        option (google.api.http) = {
            get: "/v1/self"
        };
    }
    // 列出用户 admin
    rpc ListUser(ListUserReq) returns (ListUserReply) {
        option (google.api.http) = {
            post: "/v1/user/list"
            body: "*"
        };
    }
    // 修改密码 admin
    rpc ModifyUserPd(ModifyUserPdReq) returns (ModifyUserPdReply) {
        option (google.api.http) = {
            post: "/v1/user/pd"
            body: "*"
        };
    }
    // 删除用户 admin
    rpc DeleteUser(DeleteUserReq) returns (DeleteUserReply) {
        option (google.api.http) = {
            delete: "/v1/user"
        };
    }
    // 区域系统 =================================
    // 列出所有区域详细信息
    rpc ListArea(ListAreaReq) returns (ListAreaReply) {
        option (google.api.http) = {
            post: "/v1/area/list"
            body: "*"
        };
    }

    // 通过ID得到区域
    rpc GetArea(GetAreaReq) returns (GetAreaReply) {
        option (google.api.http) = {
            get: "/v1/area/detail/{id}"
        };
    }
    // 资产系统 =================================
    // 列出资产(按条件)
    rpc ListAsset(ListAssetReq) returns (ListAssetReply) {
        option (google.api.http) = {
            post: "/v1/asset/list"
            body: "*"
        };
    }
    // 得到资产信息
    rpc GetAsset(GetAssetReq) returns (GetAssetReply) {
        option (google.api.http) = {
            get: "/v1/asset/detail/{id}"
        };
    }
    // 更新资产信息
    rpc UpdateAsset(UpdateAssetReq) returns (UpdateAssetReply) {
        option (google.api.http) = {
            post: "/v1/asset/update"
            body: "*"
        };
    }
    // 单表系统 =================================
    // 列出表单
    rpc ListStorageForm(ListStorageFormReq) returns (ListStorageFormReply) {
        option (google.api.http) = {
            post: "/v1/form/storage/list"
            body: "*"
        };
    }
    // 查找表单
    rpc GetStorageForm(GetStorageFormReq) returns (GetStorageFormReply) {
        option (google.api.http) = {
            get: "/v1/form/storage/{id}"
        };
    }
    // 创建申请表
    rpc CreateStorageForm(CreateStorageFormReq)
        returns (CreateStorageFormReply) {
        option (google.api.http) = {
            post: "/v1/form/storage/create"
            body: "*"
        };
    }

    // 创建多申请表
    rpc CreateStorageForms(CreateStorageFormsReq)
        returns (CreateStorageFormsReply) {
        option (google.api.http) = {
            post: "/v1/form/storage/creates"
            body: "*"
        };
    }

    // 更新申请表
    rpc UpdateStorageForm(UpdateStorageFormReq)
        returns (UpdateStorageFormReply) {
        option (google.api.http) = {
            post: "/v1/form/storage/update"
            body: "*"
        };
    }

    // 列出表单
    rpc ListScrappedForm(ListScrappedFormReq) returns (ListScrappedFormReply) {
        option (google.api.http) = {
            post: "/v1/form/scrapped/list"
            body: "*"
        };
    }
    // 查找表单
    rpc GetScrappedForm(GetScrappedFormReq) returns (GetScrappedFormReply) {
        option (google.api.http) = {
            get: "/v1/form/scrapped/{id}"
        };
    }
    // 创建申请表
    rpc CreateScrappedForm(CreateScrappedFormReq)
        returns (CreateScrappedFormReply) {
        option (google.api.http) = {
            post: "/v1/form/scrapped/create"
            body: "*"
        };
    }
    // 更新申请表
    rpc UpdateScrappedForm(UpdateScrappedFormReq)
        returns (UpdateScrappedFormReply) {
        option (google.api.http) = {
            post: "/v1/form/scrapped/update"
            body: "*"
        };
    }
}

message LoginReq {
    string username = 1;
    string password = 2;
}

message LoginReply {
    string token = 1;
}

message LogoutReq {
    uint64 id = 1;
}

message LogoutReply {
    bool ok = 1;
}

message RegisterReq {
    string username        = 1;
    string password        = 2;
    repeated uint32 areaId = 3;
}

message RegisterReply {
    bool ok = 1;
}

message GetUserReq {
    uint64 id = 1;
}

message GetUserReply {
    uint64 id               = 1;
    string username         = 2;
    int32 power             = 3;
    repeated uint32 areaIds = 4;
}

message GetSelfReq {}

message GetSelfReply {
    uint64 id               = 1;
    string username         = 2;
    int32 power             = 3;
    repeated uint32 areaIds = 4;
}

message ListUserReq {
    int64 pageNum           = 1;
    int64 pageSize          = 2;
    repeated uint32 areaIds = 3;
}

message ListUserReply {
    message Users {
        uint64 id               = 1;
        string username         = 2;
        int32 power             = 3;
        repeated uint32 areaIds = 4;
    }
    repeated Users users = 1;
    int64 pageTotal      = 2;
}

message GetKeyReq {}

message GetKeyReply {
    string key = 1;
}

message ModifyUserPdReq {
    uint64 id              = 1;
    string password        = 2;
    repeated uint32 areaId = 3;
}
message ModifyUserPdReply {
    bool ok = 1;
}

message DeleteUserReq {
    uint64 id              = 1;
    repeated uint32 areaId = 2;
}
message DeleteUserReply {
    bool ok = 1;
}
//==========================================
message ListAssetReq {
    message Condition {
        string classes         = 1;
        string address         = 2;
        int32 stateNum         = 3;
        int64 lowStorageAt     = 4;
        int64 upStorageAt      = 5;
        string orderBy         = 6;
        bool sortDesc          = 7;
        repeated uint32 areaId = 8;
    }
    Condition conf = 1;
    int64 pageNum  = 2;
    int64 pageSize = 3;
}
message ListAssetReply {
    message Assets {
        uint64 id        = 1;
        string classes   = 2;
        string code      = 3;
        uint32 areaId    = 4;
        string address   = 5;
        string assetInfo = 6;
        string picUrl    = 7;
        float price      = 8;
        int64 orderAt    = 9;
        string orderNum  = 10;
        int32 stateNum   = 11;
        string state     = 12;
        int64 appliedAt  = 13;
        int64 storageAt  = 14;
        int64 scrappedAt = 15;
    }
    repeated Assets results = 1;
    int64 pageTotal         = 2;
}

message GetAssetReq {
    uint64 id = 1;
}

message GetAssetReply {
    uint64 id        = 1;
    string classes   = 2;
    string code      = 3;
    uint32 areaId    = 4;
    string address   = 5;
    string assetInfo = 6;
    string picUrl    = 7;
    float price      = 8;
    int64 orderAt    = 9;
    string orderNum  = 10;
    int32 stateNum   = 11;
    string state     = 12;
    int64 appliedAt  = 13;
    int64 storageAt  = 14;
    int64 scrappedAt = 15;
}

message UpdateAssetReq {
    uint64 id        = 1;
    string address   = 2;
    string assetInfo = 3;
    string picUrl    = 4;
    float price      = 5;
    int64 orderAt    = 6;
    string orderNum  = 7;
}

message UpdateAssetReply {
    uint64 id        = 1;
    string classes   = 2;
    string code      = 3;
    uint32 areaId    = 4;
    string address   = 5;
    string assetInfo = 6;
    string picUrl    = 7;
    float price      = 8;
    int64 orderAt    = 9;
    string orderNum  = 10;
    int32 stateNum   = 11;
    string state     = 12;
    int64 appliedAt  = 13;
    int64 storageAt  = 14;
    int64 scrappedAt = 15;
}
// ===================================
message ListAreaReq {
    repeated uint32 ids = 1;
    int64 pageNum       = 2;
    int64 pageSize      = 3;
}
message ListAreaReply {
    message Areas {
        uint32 id       = 1;
        string areaInfo = 2;
    }
    repeated Areas areas = 1;
    int64 pageTotal      = 2;
}

message GetAreaReq {
    uint32 id = 1;
}

message GetAreaReply {
    uint32 id       = 1;
    string areaInfo = 2;
}

message ListStorageFormReq {
    message Conf {
        uint64 applicantId     = 1;
        uint64 operatorId      = 2;
        int32 stateNum         = 3;
        uint64 assetId         = 4;
        string assetCode       = 5;
        repeated uint32 areaId = 6;
    }
    Conf conf      = 1;
    int64 pageNum  = 2;
    int64 pageSize = 3;
}
message ListStorageFormReply {
    message Form {
        int64 id           = 1;
        int64 appliedAt    = 2;
        uint64 applicantId = 3;
        string applicant   = 5;
        int64 operatedAt   = 6;
        uint64 operatorId  = 7;
        string Operator    = 8;
        int32 stateNum     = 9;
        string state       = 10;
        uint64 assetId     = 11;
        string assetCode   = 12;
        uint32 areaId      = 13;
    }
    repeated Form forms = 1;
    int64 pageTotal     = 2;
}

message GetStorageFormReq {
    int64 id = 1;
}
message GetStorageFormReply {
    int64 id           = 1;
    int64 appliedAt    = 2;
    uint64 applicantId = 3;
    string applicant   = 5;
    int64 operatedAt   = 6;
    uint64 operatorId  = 7;
    string Operator    = 8;
    int32 stateNum     = 9;
    string state       = 10;
    uint64 assetId     = 11;
    string assetCode   = 12;
    uint32 areaId      = 13;
}

message CreateStorageFormReq {
    string classes   = 2;
    uint32 areaId    = 4;
    string address   = 5;
    string assetInfo = 6;
    string picUrl    = 7;
    float price      = 8;
    int64 orderAt    = 9;
    string orderNum  = 10;
}

message CreateStorageFormReply {
    int64 id           = 1;
    int64 appliedAt    = 2;
    uint64 applicantId = 3;
    string applicant   = 5;
    int64 operatedAt   = 6;
    uint64 operatorId  = 7;
    string Operator    = 8;
    int32 stateNum     = 9;
    string state       = 10;
    uint64 assetId     = 11;
    string assetCode   = 12;
    uint32 areaId      = 13;
}

message CreateStorageFormsReq {
    message Asset {
        string classes   = 2;
        uint32 areaId    = 4;
        string address   = 5;
        string assetInfo = 6;
        string picUrl    = 7;
        float price      = 8;
        int64 orderAt    = 9;
        string orderNum  = 10;
    }
    repeated Asset assets = 1;
}

message CreateStorageFormsReply {
    bool ok = 1;
}

message UpdateStorageFormReq {
    int64 id       = 1;
    int32 stateNum = 2;
    uint32 areaId  = 3;
}
message UpdateStorageFormReply {
    int64 id           = 1;
    int64 appliedAt    = 2;
    uint64 applicantId = 3;
    string applicant   = 5;
    int64 operatedAt   = 6;
    uint64 operatorId  = 7;
    string Operator    = 8;
    int32 stateNum     = 9;
    string state       = 10;
    uint64 assetId     = 11;
    string assetCode   = 12;
    uint32 areaId      = 13;
}

message ListScrappedFormReq {
    message Conf {
        uint64 applicantId     = 1;
        uint64 operatorId      = 2;
        int32 stateNum         = 3;
        uint64 assetId         = 4;
        string assetCode       = 5;
        repeated uint32 areaId = 6;
    }
    Conf conf      = 1;
    int64 pageNum  = 2;
    int64 pageSize = 3;
}
message ListScrappedFormReply {
    message Form {
        int64 id           = 1;
        int64 appliedAt    = 2;
        uint64 applicantId = 3;
        string applicant   = 5;
        int64 operatedAt   = 6;
        uint64 operatorId  = 7;
        string Operator    = 8;
        int32 stateNum     = 9;
        string state       = 10;
        uint64 assetId     = 11;
        string assetCode   = 12;
        uint32 areaId      = 13;
    }
    repeated Form forms = 1;
    int64 pageTotal     = 2;
}

message GetScrappedFormReq {
    int64 id = 1;
}
message GetScrappedFormReply {
    int64 id           = 1;
    int64 appliedAt    = 2;
    uint64 applicantId = 3;
    string applicant   = 5;
    int64 operatedAt   = 6;
    uint64 operatorId  = 7;
    string Operator    = 8;
    int32 stateNum     = 9;
    string state       = 10;
    uint64 assetId     = 11;
    string assetCode   = 12;
    uint32 areaId      = 13;
}

message CreateScrappedFormReq {
    uint64 assetId   = 1;
    string assetCode = 2;
    uint32 areaId    = 3;
}
message CreateScrappedFormReply {
    int64 id           = 1;
    int64 appliedAt    = 2;
    uint64 applicantId = 3;
    string applicant   = 5;
    int64 operatedAt   = 6;
    uint64 operatorId  = 7;
    string Operator    = 8;
    int32 stateNum     = 9;
    string state       = 10;
    uint64 assetId     = 11;
    string assetCode   = 12;
    uint32 areaId      = 13;
}

message UpdateScrappedFormReq {
    int64 id       = 1;
    int32 stateNum = 2;
    uint32 areaId  = 3;
}
message UpdateScrappedFormReply {
    int64 id           = 1;
    int64 appliedAt    = 2;
    uint64 applicantId = 3;
    string applicant   = 5;
    int64 operatedAt   = 6;
    uint64 operatorId  = 7;
    string Operator    = 8;
    int32 stateNum     = 9;
    string state       = 10;
    uint64 assetId     = 11;
    string assetCode   = 12;
    uint32 areaId      = 13;
}